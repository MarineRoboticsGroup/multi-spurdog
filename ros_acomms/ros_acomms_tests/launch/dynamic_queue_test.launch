<launch>
    <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}] [${node}]: ${message}"/>

    <param name="use_sim_time" value="true"/>

    <group ns="modem0">
        <param name="random_seed" value="4" />
        <node name="modem_sim_node" pkg="ros_acomms_modeling" type="modem_sim_node.py" output="screen" >
            <param name="center_frequency_hz" value="10000" type="int" />
            <param name="bandwidth_hz" value="5000" type="int" />
            <param name="SRC" value="0" type="int" />
            <param name="modem_location_source" value="local_service" />
        </node>

        <node name="tdma" pkg="ros_acomms" type="tdma_node.py" output="screen" required="true" respawn="false">
            <param name="num_slots" value="2"/>
            <param name="active_slots" value="0"/>
            <param name="slot_duration_seconds" value="30" />
        </node>


        <node name="message_queue_node" pkg="ros_acomms" type="message_queue_node.py" output="screen" >
            <param name="packet_codec_file" value="$(find ros_acomms_tests)/launch/dynamic_codec_config.yaml"/>
        </node>

        <node name="packet_dispatch" pkg="ros_acomms" type="packet_dispatch_node.py" output="screen" >
            <param name="packet_codec_file" value="$(find ros_acomms_tests)/launch/dynamic_codec_config.yaml"/>
        </node>

        <node name="modem_location_sim" pkg="ros_acomms_modeling" type="modem_location_sim_node.py" />
    </group>

    <group ns="modem1">
        <param name="random_seed" value="4" />
        <node name="modem_sim_node" pkg="ros_acomms_modeling" type="modem_sim_node.py" output="screen" >
            <param name="center_frequency_hz" value="10000" type="int" />
            <param name="bandwidth_hz" value="5000" type="int" />
            <param name="SRC" value="1" type="int" />
            <param name="modem_location_source" value="local_service" />
        </node>

        <node name="tdma" pkg="ros_acomms" type="tdma_node.py" output="screen" required="true" respawn="false">
            <param name="num_slots" value="2"/>
            <param name="active_slots" value="1"/>
            <param name="slot_duration_seconds" value="30" />
        </node>

        <node name="message_queue_node" pkg="ros_acomms" type="message_queue_node.py" output="screen" >
                <param name="packet_codec_file" value="$(find ros_acomms_tests)/launch/dynamic_codec_config.yaml"/>
        </node>

        <node name="packet_dispatch" pkg="ros_acomms" type="packet_dispatch_node.py" output="screen" >
            <param name="packet_codec_file" value="$(find ros_acomms_tests)/launch/dynamic_codec_config.yaml"/>
        </node>

        <node name="modem_location_sim" pkg="ros_acomms_modeling" type="modem_location_sim_node.py" />
    </group>

    <param name="random_seed" value="4" />
    <node name="sim_packet_performance_node" pkg="ros_acomms_modeling" type="sim_packet_performance_node.py" />

    <node name="sim_transmission_loss_node" pkg="ros_acomms_modeling" type="sim_transmission_loss_node.py"  >
        <param name="water_depth" value="20" type="int" />
        <param name="bellhop_arrivals" value="false" type="bool" />
    </node>

    <!--<node name="test_modem_sim_node" pkg="ros_acomms" type="test_modem_sim_node.py" output="screen" />-->

    <node name="clock_generator" pkg="ros_acomms_modeling" type="clock_generator.py" />

</launch>
