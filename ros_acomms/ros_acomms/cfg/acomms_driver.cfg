#! /usr/bin/env python
import roslib
from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator, str_t, int_t, bool_t

PACKAGE = 'ros_acomms'

roslib.load_manifest(PACKAGE)

gen = ParameterGenerator()

# Name, Type, Level, Description, Default, Min, Max
gen.add("use_ping_payload", bool_t, 0, "Use the payload of an FDP ping for ROS message transport", False)
gen.add("ping_maximum_miniframe_bytes", int_t, 0, "Ping payload max size", 32, 0, 32) # default size is entire miniframe 32 bytes
gen.add("tx_inhibit", bool_t, 0, "Disable modem transmissions", False)

pwramp_txlevel_enum = gen.enum([gen.const("most_loud", int_t, 0, "Highest TX volume"),
			                    gen.const("more_loud", int_t, 1, "Mid-Upper TX volume"),
			                    gen.const("less_loud", int_t, 2, "Mid-Lower TX volume"),
			                    gen.const("least_loud", int_t, 3, "Lowest TX volume")],
			                    "Modem Transmit Volume")

gen.add("pwramp_txlevel", int_t, 0, "pwramp.txlevel setting", 3, 0, 3, edit_method=pwramp_txlevel_enum)

# The second parameter is the name of a node this could run in (used to generate documentation only),
# the third parameter is a name prefix the generated files will get (e.g. "<name>Config.h" for c++, or "<name>Config.py"
# for python.
exit(gen.generate(PACKAGE, "acomms_driver", "acomms_driver"))
